{
  "info": {
    "name": "FreelanceHub Backend - API Collection",
    "_postman_id": "freelancehub-collection-1",
    "description": "Complete Postman collection for FreelanceHub backend. Includes traditional email/password login and WebAuthn authentication, projects, payments, uploads, messaging. Replace {{baseUrl}} with your server (default http://localhost:8000).",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register - Freelancer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"alice.freelancer@example.com\",\n  \"username\": \"alicefreelance\",\n  \"firstName\": \"Alice\",\n  \"lastName\": \"Freelancer\",\n  \"primaryRole\": \"freelancer\",\n  \"password\": \"StrongPassword123!\",\n  \"phone\": \"+94701234567\",\n  \"location\": {\n    \"country\": \"Sri Lanka\",\n    \"city\": \"Colombo\"\n  }\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": { "raw": "{{baseUrl}}/v1/auth/register", "host": ["{{baseUrl}}"], "path": ["v1","auth","register"] }
          },
          "response": []
        },
        {
          "name": "Register - Client",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"bob.client@example.com\",\n  \"username\": \"bobclient\",\n  \"firstName\": \"Bob\",\n  \"lastName\": \"Client\",\n  \"primaryRole\": \"client\",\n  \"password\": \"StrongPassword123!\",\n  \"phone\": \"+94707654321\",\n  \"location\": {\n    \"country\": \"Sri Lanka\",\n    \"city\": \"Kandy\"\n  }\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": { "raw": "{{baseUrl}}/v1/auth/register", "host": ["{{baseUrl}}"], "path": ["v1","auth","register"] }
          },
          "response": []
        },
        {
          "name": "Verify Email",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"email\": \"alice.freelancer@example.com\",\n  \"token\": \"<paste-verification-token>\"\n}", "options": { "raw": { "language": "json" } } },
            "url": { "raw": "{{baseUrl}}/v1/auth/verify-email", "host": ["{{baseUrl}}"], "path": ["v1","auth","verify-email"] }
          },
          "response": []
        },
        {
          "name": "Send Email OTP",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"email\": \"alice.freelancer@example.com\",\n  \"type\": \"verification\"\n}\n", "options": { "raw": { "language": "json" } } },
            "url": { "raw": "{{baseUrl}}/v1/auth/send-email-otp", "host": ["{{baseUrl}}"], "path": ["v1","auth","send-email-otp"] }
          },
          "response": []
        },
        {
          "name": "Verify Email OTP",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"email\": \"alice.freelancer@example.com\",\n  \"otp\": \"123456\"\n}\n", "options": { "raw": { "language": "json" } } },
            "url": { "raw": "{{baseUrl}}/v1/auth/verify-email-otp", "host": ["{{baseUrl}}"], "path": ["v1","auth","verify-email-otp"] }
          },
          "response": []
        },
        {
          "name": "Login - Email & Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"alice.freelancer@example.com\",\n  \"password\": \"StrongPassword123!\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{baseUrl}}/v1/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["v1", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Automatically capture and store tokens from login response",
                  "try {",
                  "  const json = pm.response.json();",
                  "  if (json.accessToken) {",
                  "    pm.collectionVariables.set('accessToken', json.accessToken);",
                  "    pm.test('Access token captured', () => { pm.expect(json.accessToken).to.be.a('string'); });",
                  "  }",
                  "  if (json.refreshToken) {",
                  "    pm.collectionVariables.set('refreshToken', json.refreshToken);",
                  "    pm.test('Refresh token captured', () => { pm.expect(json.refreshToken).to.be.a('string'); });",
                  "  }",
                  "  if (json.user) {",
                  "    pm.test('User data returned', () => { pm.expect(json.user).to.be.an('object'); });",
                  "    pm.test('User has email', () => { pm.expect(json.user.email).to.be.a('string'); });",
                  "  }",
                  "} catch (e) {",
                  "  pm.test('Response parsing failed: ' + e.message, () => { pm.expect.fail(); });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        },
        {
          "name": "Login - Test Wrong Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"alice.freelancer@example.com\",\n  \"password\": \"WrongPassword123!\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{baseUrl}}/v1/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["v1", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// This should fail with 401 Unauthorized",
                  "pm.test('Login with wrong password should fail', () => {",
                  "  pm.expect(pm.response.code).to.equal(401);",
                  "});",
                  "",
                  "pm.test('Response should contain error message', () => {",
                  "  const json = pm.response.json();",
                  "  pm.expect(json.message).to.include('Invalid email or password');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        },
        {
          "name": "Login - Get WebAuthn Challenge",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"identifier\": \"alice.freelancer@example.com\"\n}\n", "options": { "raw": { "language": "json" } } },
            "url": { "raw": "{{baseUrl}}/v1/auth/login/challenge", "host": ["{{baseUrl}}"], "path": ["v1","auth","login","challenge"] }
          },
          "response": []
        },
        {
          "name": "Login - Verify WebAuthn (placeholder)",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"identifier\": \"alice.freelancer@example.com\",\n  \"authenticationResponse\": <WebAuthn-client-response-object>,\n  \"challenge\": \"<challenge-from-server>\"\n}\n", "options": { "raw": { "language": "json" } } },
            "url": { "raw": "{{baseUrl}}/v1/auth/login/verify", "host": ["{{baseUrl}}"], "path": ["v1","auth","login","verify"] }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// If server returns tokens, store them to collection variables",
                  "try {",
                  "  const json = pm.response.json();",
                  "  if (json.accessToken) { pm.collectionVariables.set('accessToken', json.accessToken); }",
                  "  if (json.refreshToken) { pm.collectionVariables.set('refreshToken', json.refreshToken); }",
                  "  pm.test('Captured tokens if present', () => { pm.expect(true).to.be.true; });",
                  "} catch (e) { pm.test('No JSON response or no tokens', () => { pm.expect(true).to.be.true; }); }"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        },
        {
          "name": "Set Access Token (manual)",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"accessToken\": \"<paste-access-token>\",\n  \"refreshToken\": \"<paste-refresh-token>\"\n}\n", "options": { "raw": { "language": "json" } } },
            "url": { "raw": "{{baseUrl}}/__postman_set_token", "host": ["{{baseUrl}}"], "path": ["__postman_set_token"] }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const data = pm.response.json ? pm.response.json() : {};",
                  "if (data.accessToken) { pm.collectionVariables.set('accessToken', data.accessToken); }",
                  "if (data.refreshToken) { pm.collectionVariables.set('refreshToken', data.refreshToken); }",
                  "pm.test('Saved tokens to collection variables', () => { pm.expect(true).to.be.true; });"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" } ],
            "body": { "mode": "raw", "raw": "{\n  \"refreshToken\": \"<your-refresh-token>\"\n}\n", "options": { "raw": { "language": "json" } } },
            "url": { "raw": "{{baseUrl}}/v1/auth/refresh", "host": ["{{baseUrl}}"], "path": ["v1","auth","refresh"] }
          },
          "response": []
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"alice.freelancer@example.com\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{baseUrl}}/v1/auth/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["v1", "auth", "forgot-password"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Forgot password request accepted', () => {",
                  "  pm.expect(pm.response.code).to.equal(200);",
                  "});",
                  "",
                  "pm.test('Response contains message', () => {",
                  "  const json = pm.response.json();",
                  "  pm.expect(json.message).to.be.a('string');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"alice.freelancer@example.com\",\n  \"otp\": \"123456\",\n  \"newPassword\": \"NewStrongPassword123!\"\n}",
              "options": { "raw": { "language": "json" } }
            },
            "url": {
              "raw": "{{baseUrl}}/v1/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["v1", "auth", "reset-password"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Password reset successful', () => {",
                  "  pm.expect(pm.response.code).to.equal(200);",
                  "});",
                  "",
                  "pm.test('Response confirms success', () => {",
                  "  const json = pm.response.json();",
                  "  pm.expect(json.success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        },
        {
          "name": "Me (get profile)",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/v1/auth/me", "host": ["{{baseUrl}}"], "path": ["v1","auth","me"] }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Projects",
      "item": [
        {
          "name": "Create Project (client)",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "body": { "mode": "raw", "raw": "{\n  \"title\": \"Sample Project\",\n  \"description\": \"Project description\",\n  \"budget\": 500,\n  \"projectType\": \"fixed\"\n}\n", "options": { "raw": { "language": "json" } } },
            "url": { "raw": "{{baseUrl}}/v1/projects", "host": ["{{baseUrl}}"], "path": ["v1","projects"] }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Proposals",
      "item": [
        {
          "name": "Submit Proposal (freelancer)",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "body": { "mode": "raw", "raw": "{\n  \"coverLetter\": \"I can build this project in 2 weeks\",\n  \"pricing\": { \"amount\": 500, \"currency\": \"USD\" },\n  \"deliveryDays\": 14\n}\n", "options": { "raw": { "language": "json" } } },
            "url": { "raw": "{{baseUrl}}/v1/projects/{{projectId}}/proposals", "host": ["{{baseUrl}}"], "path": ["v1","projects","{{projectId}}","proposals"] }
          },
          "response": []
        },
        {
          "name": "Get Project Proposals (client)",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/v1/projects/{{projectId}}/proposals", "host": ["{{baseUrl}}"], "path": ["v1","projects","{{projectId}}","proposals"] }
          },
          "response": []
        },
        {
          "name": "Accept Proposal (client)",
          "request": {
            "method": "POST",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/v1/projects/proposals/{{proposalId}}/accept", "host": ["{{baseUrl}}"], "path": ["v1","projects","proposals","{{proposalId}}","accept"] }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Reviews",
      "item": [
        {
          "name": "Create Review",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "body": { "mode": "raw", "raw": "{\n  \"projectId\": \"{{projectId}}\",\n  \"rating\": 5,\n  \"title\": \"Great work\",\n  \"comment\": \"Delivered on time and exceeded expectations\"\n}\n", "options": { "raw": { "language": "json" } } },
            "url": { "raw": "{{baseUrl}}/v1/reviews", "host": ["{{baseUrl}}"], "path": ["v1","reviews"] }
          },
          "response": []
        },
        {
          "name": "Get Reviews",
          "request": {
            "method": "GET",
            "header": [],
            "url": { "raw": "{{baseUrl}}/v1/reviews", "host": ["{{baseUrl}}"], "path": ["v1","reviews"] }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Notifications",
      "item": [
        {
          "name": "Get Notifications",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/v1/notifications", "host": ["{{baseUrl}}"], "path": ["v1","notifications"] }
          },
          "response": []
        },
        {
          "name": "Mark Notification Read",
          "request": {
            "method": "PUT",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/v1/notifications/{{notificationId}}/read", "host": ["{{baseUrl}}"], "path": ["v1","notifications","{{notificationId}}","read"] }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Admin",
      "item": [
        {
          "name": "Get Dashboard Stats (admin)",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/admin/dashboard/stats", "host": ["{{baseUrl}}"], "path": ["admin","dashboard","stats"] }
          },
          "response": []
        },
        {
          "name": "Get Users (admin)",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "url": { "raw": "{{baseUrl}}/admin/users?page=1&limit=20", "host": ["{{baseUrl}}"], "path": ["admin","users"], "query": [ { "key": "page", "value": "1" }, { "key": "limit", "value": "20" } ] }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Payments",
      "item": [
        {
          "name": "Create Payment Intent (client)",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "body": { "mode": "raw", "raw": "{\n  \"contractId\": \"<contract-id>\",\n  \"amount\": 1000\n}\n", "options": { "raw": { "language": "json" } } },
            "url": { "raw": "{{baseUrl}}/v1/payments/intent", "host": ["{{baseUrl}}"], "path": ["v1","payments","intent"] }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Uploads",
      "item": [
        {
          "name": "Upload Single File",
          "request": {
            "method": "POST",
            "header": [ { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "body": { "mode": "formdata", "formdata": [ { "key": "file", "type": "file" }, { "key": "category", "value": "profile", "type": "text" } ] },
            "url": { "raw": "{{baseUrl}}/uploads/single", "host": ["{{baseUrl}}"], "path": ["uploads","single"] }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Messaging",
      "item": [
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [ { "key": "Content-Type", "value": "application/json" }, { "key": "Authorization", "value": "Bearer {{accessToken}}" } ],
            "body": { "mode": "raw", "raw": "{\n  \"receiverId\": \"<user-id>\",\n  \"content\": \"Hello from Postman\"\n}\n", "options": { "raw": { "language": "json" } } },
            "url": { "raw": "{{baseUrl}}/v1/messaging/messages", "host": ["{{baseUrl}}"], "path": ["v1","messaging","messages"] }
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:3000" },
    { "key": "accessToken", "value": "" }
  ]
}
